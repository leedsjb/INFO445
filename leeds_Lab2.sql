/*
Lab 2 - CREATE Statements, Control of flow, and Nested Stored Procedures
INFO 445
J. Benjamin Leeds
Created: April 13, 2018
Updated:

*/

-- Step 1: Create Database
IF NOT EXISTS(
    SELECT name
    FROM sys.databases
    WHERE name = N'leeds_Lab2'
)
CREATE DATABASE leeds_Lab2
GO

-- Step 2: Use Database
USE leeds_Lab2
GO

-- Step 3: Create Tables
-- check if tables exist, if so drop them so they can be recreated empty

IF OBJECT_ID('dbo.tblPET', 'U') IS NOT NULL
DROP TABLE dbo.tblPET

IF OBJECT_ID('dbo.tblPET_TYPE', 'U') IS NOT NULL
DROP TABLE dbo.tblPET_TYPE

IF OBJECT_ID('dbo.tblCOUNTRY', 'U') IS NOT NULL
DROP TABLE dbo.tblCOUNTRY

IF OBJECT_ID('dbo.tblTEMPERAMENT', 'U') IS NOT NULL
DROP TABLE dbo.tblTEMPERAMENT

IF OBJECT_ID('dbo.tblGENDER', 'U') IS NOT NULL
DROP TABLE dbo.tblGENDER

GO

CREATE TABLE tblPET_TYPE(
    PetTypeID INT IDENTITY(1,1) PRIMARY KEY,
    PetTypeName NVARCHAR(50)
)

CREATE TABLE tblCOUNTRY(
    CountryID INT IDENTITY(1,1) PRIMARY KEY,
    CountryName NVARCHAR(50)
)

CREATE TABLE tblTEMPERAMENT(
    TempID INT IDENTITY(1,1) PRIMARY KEY,
    TempName NVARCHAR(50)
)

CREATE TABLE tblGENDER(
    GenderID INT IDENTITY(1,1) PRIMARY KEY,
    GenderName NVARCHAR(50)
)

CREATE TABLE tblPET(
    PetID int IDENTITY(1,1) PRIMARY KEY NOT NULL,
    PetName NVARCHAR(50) NOT NULL,
    PetTypeID INT FOREIGN KEY REFERENCES tblPET_TYPE NOT NULL,
    CountryID INT FOREIGN KEY REFERENCES tblCOUNTRY NOT NULL,
    TempID INT FOREIGN KEY REFERENCES tblTEMPERAMENT NOT NULL,
    DOB date NOT NULL,
    GenderID INT FOREIGN KEY REFERENCES tblGENDER NOT NULL
)

-- At this point delete any entries that have NULL values for ANY attribute (per Brendan Carlquist)

DELETE FROM RAW_PetData
WHERE PETNAME IS NULL
OR PET_TYPE IS NULL
OR TEMPERAMENT IS NULL
OR COUNTRY IS NULL
OR DATE_BIRTH IS NULL
OR GENDER IS NULL

-- At this point use SQL Server Management Studio Import Wizard to import raw data from Excel

-- Step 10: Populate Lookup Tables with DISTINCT values from the following tables:
--      PET_TYPE, TEMPERAMENT, COUNTRY, GENDER
-- Do this because these tables can only have unique "categorical" values in them that the
-- primary tblPET table will reference via FK relationships

INSERT INTO tblPET_TYPE(PetTypeName)
SELECT DISTINCT(PET_TYPE) FROM RAW_PetData WHERE PET_TYPE IS NOT NULL

INSERT INTO tblTEMPERAMENT(TempName)
SELECT DISTINCT(TEMPERAMENT) FROM RAW_PetData WHERE TEMPERAMENT IS NOT NULL

INSERT INTO tblCOUNTRY(CountryName)
SELECT DISTINCT(COUNTRY) FROM RAW_PetData WHERE COUNTRY IS NOT NULL

INSERT INTO tblGENDER(GenderName)
SELECT DISTINCT(GENDER) FROM RAW_PetData WHERE GENDER IS NOT NULL

-- Step 11: Create new table with same schema and addition of Primary Key attribute

-- Delete table if it exists already
IF OBJECT_ID('RAW_PetData_PK', 'U') IS NOT NULL
DROP TABLE RAW_PetData_PK

-- Create table with addition of Primary Key attribute
CREATE TABLE dbo.RAW_PetData_PK(
    PK_ID INT IDENTITY(1,1) PRIMARY KEY,
    PETNAME NVARCHAR(50),
    PET_TYPE NVARCHAR(50),
    TEMPERAMENT NVARCHAR(50),
    COUNTRY NVARCHAR(50),
    DATE_BIRTH DATE,
    GENDER NVARCHAR(50),
)

/* */

-- Copy Data from RAW_PetData to RAW_PetData_PK
-- Primary keys will be autogenerated due to the IDENTITY(1,1) constraint on PK_ID

INSERT INTO RAW_PetData_PK(PETNAME, PET_TYPE, TEMPERAMENT, COUNTRY, DATE_BIRTH, GENDER)
SELECT PETNAME, PET_TYPE, TEMPERAMENT, COUNTRY, DATE_BIRTH, GENDER
FROM RAW_PetData

-- Step 12: Create GetID Stored Procedures for each lookup table. Calling the stored procedure with
--          a lookup table value will return the ID (primary key) for that value in the lookup table

IF(OBJECT_ID('uspGetPetTypeID')) IS NOT NULL
    DROP PROCEDURE uspGetPetTypeID;
GO

CREATE PROCEDURE uspGetPetTypeID
    (
        @PTN NVARCHAR(50),
        @PTN_outputParameter INT OUTPUT
    )
AS
BEGIN
    SET @PTN_outputParameter = (
        SELECT PetTypeID FROM tblPET_TYPE WHERE PetTypeName = @PTN
    )
    
END
GO

IF(OBJECT_ID('uspGetPetCountryID')) IS NOT NULL
    DROP PROCEDURE uspGetPetCountryID;
GO

CREATE PROCEDURE uspGetPetCountryID
    (
        @PCN NVARCHAR(50),
        @PCN_outputParameter INT OUTPUT
    )
AS
BEGIN

    -- PRINT 'country name input:'
    -- PRINT @PCN
    SET @PCN_outputParameter = (
        SELECT CountryID FROM tblCOUNTRY WHERE CountryName = @PCN
    )

END
GO

IF(OBJECT_ID('uspGetPetTempID')) IS NOT NULL
    DROP PROCEDURE uspGetPetTempID;
GO

CREATE PROCEDURE uspGetPetTempID
    (
        @PTempN NVARCHAR(50),
        @PTempN_outputParameter INT OUTPUT
    )
AS
BEGIN
    SET @PTempN_outputParameter = (
        SELECT TempID FROM tblTEMPERAMENT WHERE TempName=@PTempN
    )
END
GO

IF(OBJECT_ID('uspGetPetGenderID')) IS NOT NULL
    DROP PROCEDURE uspGetPetGenderID;
GO

CREATE PROCEDURE uspGetPetGenderID
    (
        @PGN NVARCHAR(50),
        @PGN_outputParameter INT OUTPUT
    )
AS
BEGIN
    SET @PGN_outputParameter = (
        SELECT GenderID FROM tblGENDER WHERE GenderName = @PGN
    )
END
GO

-- Create populate table nested stored procedure

IF(OBJECT_ID('uspPopulatePetTable')) IS NOT NULL
    DROP PROCEDURE uspPopulatePetTable;
GO

CREATE PROCEDURE uspPopulatePetTable
    (
        @PET_NAME NVARCHAR(50),
        @PET_TYPE NVARCHAR(50),
        @TEMPERAMENT NVARCHAR(50),
        @COUNTRY NVARCHAR(50),
        @PET_DOB DATE,
        @GENDER NVARCHAR(50)
    )
AS
BEGIN

    DECLARE @petTypeID INT
    DECLARE @petCountryID INT
    DECLARE @petTemperamentID INT
    DECLARE @petGenderID INT
    
     -- retrieve PetTypeID from lookup table and store in local variable
    EXECUTE uspGetPetTypeID
    @PTN = @PET_TYPE,
    @PTN_outputParameter = @petTypeID OUTPUT
           
    EXECUTE uspGetPetCountryID
    @PCN = @COUNTRY,
    @PCN_outputParameter = @petCountryID OUTPUT

    EXECUTE uspGetPetTempID
    @PTempN = @TEMPERAMENT,
    @PTempN_outputParameter = @petTemperamentID OUTPUT

    EXECUTE uspGetPetGenderID
    @PGN = @GENDER,
    @PGN_outputParameter = @petGenderID OUTPUT

    -- insert values retrieved from lookup tables using nested stored procedures into database
    INSERT INTO dbo.tblPET(PetName, PetTypeID, CountryID, TempID, DOB, GenderID)
    VALUES (@PET_NAME, @petTypeID, @petCountryID, @petTemperamentID, @PET_DOB, @petGenderID)

END
GO

-- Count how many rows of data will be processed in loop
DECLARE @NUM_ROWS INT
SET @NUM_ROWS = (SELECT COUNT(PK_ID) FROM RAW_PetData_PK)

DECLARE @CURSOR INT
SET @CURSOR = 1 -- points to first row in RAW table w/ ID = 1

-- WHILE loop iterates through rows in RAW table and calls nested stored procedure for each row

WHILE @CURSOR < @NUM_ROWS + 1
BEGIN

    DECLARE @petName NVARCHAR(50)
    DECLARE @petTypeName NVARCHAR(50)
    DECLARE @petCountry NVARCHAR(50)
    DECLARE @petTemperament NVARCHAR(50)
    DECLARE @petDOB DATE
    DECLARE @petGender NVARCHAR(50)

    SELECT @petName = PETNAME, @petTypeName = PET_TYPE, @petTemperament = TEMPERAMENT,
    @petCountry = COUNTRY, @petDOB = DATE_BIRTH, @petGender = GENDER
    FROM RAW_PetData_PK WHERE PK_ID = @CURSOR
  
    EXECUTE uspPopulatePetTable
    @PET_NAME = @petName,
    @PET_TYPE = @petTypeName,
    @TEMPERAMENT = @petTemperament,
    @COUNTRY = @petCountry,
    @PET_DOB = @petDOB,
    @GENDER = @petGender

    DELETE FROM RAW_PetData_PK WHERE PK_ID = @CURSOR

    SET @CURSOR = @CURSOR + 1
END
