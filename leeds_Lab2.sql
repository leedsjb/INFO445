/*
Lab 2 - CREATE Statements, Control of flow, and Nested Stored Procedures
INFO 445
J. Benjamin Leeds
Created: April 13, 2018
Updated:

*/

-- Step 1: Create Database
IF NOT EXISTS(
    SELECT name
    FROM sys.databases
    WHERE name = N'leeds_Lab2'
)
CREATE DATABASE leeds_Lab2
GO

-- Step 2: Use Database
USE leeds_Lab2
GO

-- Step 3: Create Tables
-- check if tables exist, if so drop them so they can be recreated empty

IF OBJECT_ID('dbo.tblPET', 'U') IS NOT NULL
DROP TABLE dbo.tblPET

IF OBJECT_ID('dbo.tblPET_TYPE', 'U') IS NOT NULL
DROP TABLE dbo.tblPET_TYPE

IF OBJECT_ID('dbo.tblCOUNTRY', 'U') IS NOT NULL
DROP TABLE dbo.tblCOUNTRY

IF OBJECT_ID('dbo.tblTEMPERAMENT', 'U') IS NOT NULL
DROP TABLE dbo.tblTEMPERAMENT

IF OBJECT_ID('dbo.tblGENDER', 'U') IS NOT NULL
DROP TABLE dbo.tblGENDER

GO

CREATE TABLE tblPET_TYPE(
    PetTypeID INT IDENTITY(1,1) PRIMARY KEY,
    PetTypeName varchar(50)
)

CREATE TABLE tblCOUNTRY(
    CountryID INT IDENTITY(1,1) PRIMARY KEY,
    CountryName varchar(50)
)

CREATE TABLE tblTEMPERAMENT(
    TempID INT IDENTITY(1,1) PRIMARY KEY,
    TempName varchar(30)
)

CREATE TABLE tblGENDER(
    GenderID INT IDENTITY(1,1) PRIMARY KEY,
    GenderName varchar(20)
)

CREATE TABLE tblPET(
    PetID int IDENTITY(1,1) PRIMARY KEY,
    PetName varchar(30),
    PetTypeID INT FOREIGN KEY REFERENCES tblPET_TYPE,
    CountryID INT FOREIGN KEY REFERENCES tblCOUNTRY,
    TempID INT FOREIGN KEY REFERENCES tblTEMPERAMENT,
    DOB date NOT NULL,
    GenderID INT FOREIGN KEY REFERENCES tblGENDER
)

-- At this point delete any entries that have NULL values for ANY attribute (per Brendan Carlquist)

DELETE FROM RAW_PetData
WHERE PETNAME IS NULL
OR PET_TYPE IS NULL
OR TEMPERAMENT IS NULL
OR COUNTRY IS NULL
OR DATE_BIRTH IS NULL
OR GENDER IS NULL

-- At this point use SQL Server Management Studio Import Wizard to import raw data from Excel

-- Step 10: Populate Lookup Tables with DISTINCT values from the following tables:
--      PET_TYPE, TEMPERAMENT, COUNTRY, GENDER
-- Do this because these tables can only have unique "categorical" values in them that the
-- primary tblPET table will reference via FK relationships

SELECT COUNT(PETNAME) FROM RAW_PetData
SELECT * FROM tblPET_TYPE
SELECT * FROM tblTEMPERAMENT
SELECT * FROM tblCOUNTRY
SELECT * FROM tblGENDER

INSERT INTO tblPET_TYPE(PetTypeName)
SELECT DISTINCT(PET_TYPE) FROM RAW_PetData WHERE PET_TYPE IS NOT NULL

INSERT INTO tblTEMPERAMENT(TempName)
SELECT DISTINCT(TEMPERAMENT) FROM RAW_PetData WHERE TEMPERAMENT IS NOT NULL

INSERT INTO tblCOUNTRY(CountryName)
SELECT DISTINCT(COUNTRY) FROM RAW_PetData WHERE COUNTRY IS NOT NULL

INSERT INTO tblGENDER(GenderName)
SELECT DISTINCT(GENDER) FROM RAW_PetData WHERE GENDER IS NOT NULL

-- Step 11: Create new table with same schema and addition of Primary Key attribute

-- Delete table if it exists already
IF OBJECT_ID('RAW_PetData_PK', 'U') IS NOT NULL
DROP TABLE RAW_PetData_PK

-- Create table with addition of Primary Key attribute
CREATE TABLE dbo.RAW_PetData_PK(
    PK_ID INT IDENTITY(1,1) PRIMARY KEY,
    PETNAME nvarchar(255),
    PET_TYPE nvarchar(255),
    TEMPERAMENT nvarchar(255),
    COUNTRY nvarchar(255),
    DATE_BIRTH DATE,
    GENDER nvarchar(255),
)

-- Copy Data from RAW_PetData to RAW_PetData_PK
-- Primary keys will be autogenerated due to the IDENTITY(1,1) constraint on PK_ID

INSERT INTO RAW_PetData_PK(PETNAME, PET_TYPE, TEMPERAMENT, COUNTRY, DATE_BIRTH, GENDER)
SELECT PETNAME, PET_TYPE, TEMPERAMENT, COUNTRY, DATE_BIRTH, GENDER
FROM RAW_PetData

-- Step 12: Create GetID Stored Procedures for each lookup table. Calling the stored procedure with
--          a lookup table value will return the ID (primary key) for that value in the lookup table
 




-- View all tables
SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'
 

